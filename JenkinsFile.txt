node{

stage('git checkout'){
    git credentialsId: 'git-cred', url: 'https://github.com/dibyajyoti0920/bootcamp.git'
print"Check out completed"
}

stage('clean and compile'){

        def mavenHome= tool name: 'maven3', type: 'maven'
        def mavenCMD= "${mavenHome}/bin/mvn"
        sh "${mavenCMD} compile"
    }
stage('sonar quality check'){

        def mavenHome= tool name: 'maven3', type: 'maven'
        def mavenCMD= "${mavenHome}/bin/mvn"
        sh "${mavenCMD} sonar:sonar"
    }
stage('build test and package'){
        def mavenHome = tool name: 'maven3', type: 'maven'
        def mavenCMD = "${mavenHome}/bin/mvn"
        sh "${mavenCMD} package"
    }

stage('Build docker image'){
sh "docker build -t dibyajyoti0920/devops-images:${env.BUILD_ID} ."
}
stage('push docker image'){
         withCredentials([string(credentialsId: 'docker-cred', variable: 'doc')]){
         sh "docker login -u dibyajyoti0920 -p ${doc}"
       }
 sh "docker push dibyajyoti0920/devops-images:${env.BUILD_ID}"
    
}
stage('Deploy Containor'){
    sh "docker pull dibyajyoti0920/devops-images:${env.BUILD_ID}"
}

stage('Deploy to Tomcat remote'){
    sshagent(['tomcatserver']) {
    sh 'scp -o StrictHostKeyChecking=no target/*.war root@devops-bootcamp:/opt/tomcat/apache-tomcat-9.0.34/webapps'
}
}
stage('Run Containor'){
    sh "docker run -p 8888:8080 -d dibyajyoti0920/devops-images:${env.BUILD_ID}"
}

}
